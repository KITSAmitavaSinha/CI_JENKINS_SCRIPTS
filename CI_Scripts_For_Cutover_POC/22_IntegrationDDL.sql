CREATE TABLE "OMNIISS"."INTERFACE_MB_EVENTS"
(
  EVENT_ID NUMBER(20, 0) NOT NULL 
, CONNECTOR_ID VARCHAR2(40 BYTE) 
, OBJECT_KEY VARCHAR2(80 BYTE) NOT NULL 
, OBJECT_NAME VARCHAR2(80 BYTE) NOT NULL 
, OBJECT_VERB VARCHAR2(40 BYTE) NOT NULL 
, EVENT_PRIORITY NUMBER(5, 0) NOT NULL 
, EVENT_TIME DATE DEFAULT current_timestamp NOT NULL 
, EVENT_STATUS NUMBER(5, 0) NOT NULL 
, EVENT_COMMENT VARCHAR2(100 BYTE) 
, POS_LOG CLOB 
, CONSTRAINT PK_INTERFACE_MB_EVENTS PRIMARY KEY (EVENT_ID)
  ENABLE 
);

CREATE TABLE "OMNIISS"."INTERFACE_MB_ARCHIVE"
  (
    "EVENT_ID"       NUMBER(20,0) NOT NULL ENABLE,
    "CONNECTOR_ID"   VARCHAR2(40 BYTE),
    "OBJECT_KEY"     VARCHAR2(80 BYTE) NOT NULL ENABLE,
    "OBJECT_NAME"    VARCHAR2(80 BYTE) NOT NULL ENABLE,
    "OBJECT_VERB"    VARCHAR2(40 BYTE) NOT NULL ENABLE,
    "EVENT_PRIORITY" NUMBER(5,0) NOT NULL ENABLE,
    "EVENT_TIME" DATE DEFAULT CURRENT_TIMESTAMP NOT NULL ENABLE,
    "ARCHIVE_TIME" DATE DEFAULT CURRENT_TIMESTAMP,
    "EVENT_STATUS"  NUMBER(5,0) NOT NULL ENABLE,
    "EVENT_COMMENT" VARCHAR2(100 BYTE)
  );

CREATE SEQUENCE "OMNIISS"."MB_EVENT_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1000 NOCACHE NOORDER NOCYCLE NOPARTITION ;



create or replace
TRIGGER OMNIISS.INTERFACE_POSEXTRTRN_TRIGGER
AFTER INSERT ON POS_EXTR_TRN_POST
FOR EACH ROW DECLARE
BEGIN
IF :new.pos_log IS NOT NULL THEN 
INSERT INTO OMNIISS.INTERFACE_MB_EVENTS VALUES (mb_event_seq.nextval,'OMNICONNECTOR',:new.ID_TRN,'POS_EXTR_TRN_POST','Create',1,current_timestamp,0,'0',:new.pos_log);
ELSE 
INSERT INTO OMNIISS.INTERFACE_MB_ARCHIVE VALUES (mb_event_seq.nextval,'OMNICONNECTOR',:new.ID_TRN,'POS_EXTR_TRN_POST','Create',1,current_timestamp,current_timestamp,1,'NULL POSLOG');
END IF;
END;